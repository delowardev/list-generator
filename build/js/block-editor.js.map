{"version":3,"file":"js/block-editor.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,WCAxD,EAA+BA,OAAW,GAAS,MCAnD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAc,WCY9D,GANa,IAAAC,eAAc,EAAAC,IAAK,CAC9BC,QAAS,YACTC,MAAO,+BACN,IAAAH,eAAc,EAAAI,KAAM,CACrBC,EAAG,4GCVC,EAA+BN,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAQ,KCgBxD,IAAMO,EAAoB,SAAEC,GAExB,IAAQC,GAAiBC,EAAAA,EAAAA,aAAaC,EAAAA,OAA9BF,aAEFG,GAAaC,EAAAA,EAAAA,YAAW,SAAAC,GAE1B,OADoBA,EAAQH,EAAAA,OACTI,cAAeP,EAAMQ,SAC3C,IAcD,OACI,oBAAC,EAAAC,cAAD,CAAeC,MAAM,SACjB,oBAAC,EAAAC,cAAD,CACIC,KAAOC,EACPC,MAAM,iBACNC,QAjBZ,WACI,IAAMC,GAAQC,EAAAA,EAAAA,aACV,YACA,CACIC,SAAS,EACTC,OAAQ,iEAIhBlB,EAAce,EAAOZ,EACxB,IAWJ,EAKKgB,GAAWC,EAAAA,EAAAA,6BAA4B,SAAEC,GAC3C,OAAO,SAAEtB,GACL,OACI,wCACI,oBAACsB,EAAetB,GACd,mBAAqBA,EAAMuB,MAAQ,oBAACxB,EAAuBC,GAGxE,CACJ,KAKDwB,EAAAA,EAAAA,WAAW,mBAAoB,6BAA8BJ,E","sources":["webpack://list-generator/external window [\"wp\",\"blockEditor\"]","webpack://list-generator/external window [\"wp\",\"components\"]","webpack://list-generator/external window [\"wp\",\"hooks\"]","webpack://list-generator/external window [\"wp\",\"compose\"]","webpack://list-generator/external window [\"wp\",\"element\"]","webpack://list-generator/external window [\"wp\",\"primitives\"]","webpack://list-generator/./node_modules/@wordpress/icons/build-module/library/list.js","webpack://list-generator/external window [\"wp\",\"blocks\"]","webpack://list-generator/external window [\"wp\",\"data\"]","webpack://list-generator/./src/js/block-extends/paragraph.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nconst list = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M4 4v1.5h16V4H4zm8 8.5h8V11h-8v1.5zM4 20h16v-1.5H4V20zm4-8c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2z\"\n}));\nexport default list;\n//# sourceMappingURL=list.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * Wordpress dependencies.\n */\nimport { BlockControls, store as blockEditorStore } from '@wordpress/block-editor';\nimport { ToolbarButton } from '@wordpress/components';\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { list } from '@wordpress/icons';\nimport { createBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from \"@wordpress/data\";\n\n/**\n * Paragraph inspector controls.\n * @param props\n * @returns {JSX.Element}\n */\nconst ParagraphControls = ( props ) => {\n\n    const { insertBlocks } = useDispatch( blockEditorStore );\n\n    const blockIndex = useSelect( select => {\n        const editorStore = select( blockEditorStore );\n        return editorStore.getBlockIndex( props.clientId );\n    })\n\n    function onInsertBlock() {\n        const block = createBlock(\n            \"core/list\",\n            {\n                ordered: true,\n                values: \"<li>List item 1</li><li>List item 2</li><li>List item 3</li>\"\n            }\n        )\n\n        insertBlocks( block, blockIndex )\n    }\n\n    return (\n        <BlockControls group=\"other\">\n            <ToolbarButton\n                icon={ list }\n                label=\"Prepend a list\"\n                onClick={ onInsertBlock}\n            />\n        </BlockControls>\n    );\n};\n\n/**\n * Register additional block controls to the 'core/paragraph' block.\n */\nconst controls = createHigherOrderComponent( ( BlockEdit ) => {\n    return ( props ) => {\n        return (\n            <>\n                <BlockEdit { ...props } />\n                { 'core/paragraph' === props.name && <ParagraphControls { ...props } /> }\n            </>\n        );\n    };\n} );\n\n/**\n * Add filter hook\n */\naddFilter( 'editor.BlockEdit', 'list-generator/extend-core', controls );\n"],"names":["window","createElement","SVG","viewBox","xmlns","Path","d","ParagraphControls","props","insertBlocks","useDispatch","blockEditorStore","blockIndex","useSelect","select","getBlockIndex","clientId","BlockControls","group","ToolbarButton","icon","list","label","onClick","block","createBlock","ordered","values","controls","createHigherOrderComponent","BlockEdit","name","addFilter"],"sourceRoot":""}